/*
   Generated by EX4-TO-MQ4 decompiler V4.0.229.1d [-]
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "Copyright © 2008, Jason Robinson."
#property link      "http://www.spreadtrade2win.com"

#property indicator_chart_window
#property indicator_buffers 2
#property indicator_color1 Lime
#property indicator_color2 Red

double g_ibuf_76[];
double g_ibuf_80[];
bool gi_84;
extern int Nbr_Periods = 4;
extern double Multiplier = 2.0;

int init() {
   SetIndexBuffer(0, g_ibuf_76);
   SetIndexStyle(0, DRAW_LINE, STYLE_SOLID, 2);
   SetIndexLabel(0, "Trend Up");
   SetIndexBuffer(1, g_ibuf_80);
   SetIndexStyle(1, DRAW_LINE, STYLE_SOLID, 2);
   SetIndexLabel(1, "Trend Down");
   return (0);
}

int deinit() {
   return (0);
}

int start() {
   bool li_8;
   bool li_12;
   int lia_16[5000];
   double lda_20[5000];
   double lda_24[5000];
   double ld_28;
   double iatr_36;
   int li_44 = IndicatorCounted();
   if (li_44 < 0) return (-1);
   if (li_44 > 0) li_44--;
   int li_0 = Bars - li_44;
   for (int bars_4 = Bars; bars_4 >= 0; bars_4--) {
      g_ibuf_76[bars_4] = EMPTY_VALUE;
      g_ibuf_80[bars_4] = EMPTY_VALUE;
      iatr_36 = iATR(NULL, 0, Nbr_Periods, bars_4);
      ld_28 = (High[bars_4] + Low[bars_4]) / 2.0;
      lda_20[bars_4] = ld_28 + Multiplier * iatr_36;
      lda_24[bars_4] = ld_28 - Multiplier * iatr_36;
      lia_16[bars_4] = 1;
      if (Close[bars_4] > lda_20[bars_4 + 1]) {
         lia_16[bars_4] = 1;
         if (lia_16[bars_4 + 1] == -1) gi_84 = TRUE;
      } else {
         if (Close[bars_4] < lda_24[bars_4 + 1]) {
            lia_16[bars_4] = -1;
            if (lia_16[bars_4 + 1] == 1) gi_84 = TRUE;
         } else {
            if (lia_16[bars_4 + 1] == 1) {
               lia_16[bars_4] = 1;
               gi_84 = FALSE;
            } else {
               if (lia_16[bars_4 + 1] == -1) {
                  lia_16[bars_4] = -1;
                  gi_84 = FALSE;
               }
            }
         }
      }
      if (lia_16[bars_4] < 0 && lia_16[bars_4 + 1] > 0) li_8 = TRUE;
      else li_8 = FALSE;
      if (lia_16[bars_4] > 0 && lia_16[bars_4 + 1] < 0) li_12 = TRUE;
      else li_12 = FALSE;
      if (lia_16[bars_4] > 0 && lda_24[bars_4] < lda_24[bars_4 + 1]) lda_24[bars_4] = lda_24[bars_4 + 1];
      if (lia_16[bars_4] < 0 && lda_20[bars_4] > lda_20[bars_4 + 1]) lda_20[bars_4] = lda_20[bars_4 + 1];
      if (li_8 == TRUE) lda_20[bars_4] = ld_28 + Multiplier * iatr_36;
      if (li_12 == TRUE) lda_24[bars_4] = ld_28 - Multiplier * iatr_36;
      if (lia_16[bars_4] == 1) {
         g_ibuf_76[bars_4] = lda_24[bars_4];
         if (gi_84 == TRUE) {
            g_ibuf_76[bars_4 + 1] = g_ibuf_80[bars_4 + 1];
            gi_84 = FALSE;
         }
      } else {
         if (lia_16[bars_4] == -1) {
            g_ibuf_80[bars_4] = lda_20[bars_4];
            if (gi_84 == TRUE) {
               g_ibuf_80[bars_4 + 1] = g_ibuf_76[bars_4 + 1];
               gi_84 = FALSE;
            }
         }
      }
   }
   ObjectsRedraw();
   return (0);
}
