/*
   Generated by EX4-TO-MQ4 decompiler V4.0.224.1 []
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/

#property indicator_separate_window
#property indicator_minimum -100.0
#property indicator_maximum 100.0
#property indicator_levelcolor SlateGray
#property indicator_levelstyle 1
#property indicator_buffers 8
#property indicator_color1 Lime
#property indicator_color2 Red
#property indicator_color3 Black
#property indicator_color4 Black
#property indicator_color5 Black
#property indicator_color6 Black
#property indicator_color7 Black
#property indicator_color8 Black
#property indicator_width1 1
#property indicator_level1 60.0
#property indicator_width2 1
#property indicator_level2 53.0
#property indicator_level3 -50.0
#property indicator_level4 -60.0

extern int WavePeriod = 10;
extern int AvgPeriod = 21;
double BullBuf[];
double BearBuf[];
double ESA_Buf[];
double DD_Buf[];
double CI_Buf[];
double DD_Val_Buf[];
double Buy[];
double Sell[];
int gi_124 = -50;
int gi_128 = 53;
int gi_132;
int gi_136 = 000000;

int init() {
   //if (gi_136 != AccountNumber()) {
   //   Comment("Trade on account :" + AccountNumber() + " is FORBIDDEN!");
   //   return (0);
   //}
   Comment("");
   IndicatorShortName("TrendWave");
   SetIndexBuffer(0, ESA_Buf);
   SetIndexLabel(0, "ESA");
   SetIndexStyle(0, DRAW_NONE);
   SetIndexDrawBegin(0, 0);
   SetIndexBuffer(1, DD_Val_Buf);
   SetIndexLabel(1, "DD Values");
   SetIndexStyle(1, DRAW_NONE);
   SetIndexDrawBegin(1, 0);
   SetIndexBuffer(2, DD_Buf);
   SetIndexLabel(2, "DD");
   SetIndexStyle(2, DRAW_NONE);
   SetIndexDrawBegin(2, 0);
   SetIndexBuffer(3, CI_Buf);
   SetIndexLabel(3, "CI");
   SetIndexStyle(3, DRAW_NONE);
   SetIndexDrawBegin(3, 0);
   SetIndexBuffer(4, BullBuf);
   SetIndexLabel(4, "Bull");
   SetIndexStyle(4, DRAW_LINE, STYLE_SOLID, 1, Lime);
   SetIndexDrawBegin(4, 0);
   SetIndexBuffer(5, BearBuf);
   SetIndexLabel(5, "Bear");
   SetIndexStyle(5, DRAW_LINE, STYLE_SOLID, 1, Red);
   SetIndexDrawBegin(5, 0);
   SetIndexBuffer(6, Buy);
   SetIndexLabel(6, "Buy Dot");
   SetIndexStyle(6, DRAW_ARROW, STYLE_SOLID, 2, Aqua);
   SetIndexArrow(6, 108);
   SetIndexDrawBegin(6, 0);
   SetIndexBuffer(7, Sell);
   SetIndexLabel(7, "Sell Dot");
   SetIndexStyle(7, DRAW_ARROW, STYLE_SOLID, 2, Yellow);
   SetIndexArrow(7, 108);
   SetIndexDrawBegin(7, 0);
   ArrayResize(ESA_Buf, Bars);
   ArrayResize(DD_Val_Buf, Bars);
   ArrayResize(DD_Buf, Bars);
   ArrayResize(CI_Buf, Bars);
   ArrayResize(BullBuf, Bars);
   ArrayResize(BearBuf, Bars);
   ArrayResize(Buy, Bars);
   ArrayResize(Sell, Bars);
   return (0);
}

int start() {
   double l_ima_on_arr_0;
   //if (gi_136 != AccountNumber()) {
   //   Comment("Trade on account :" + AccountNumber() + " is FORBIDDEN!");
   //   return (0);
   //}
   Comment("");
   int counted = IndicatorCounted();
   if (counted < 0) return (-1);
   if (counted > 0) counted--;
   int limit = Bars - counted;
   for (int i = limit; i > 0; i--) {
      ESA_Buf[i] = iMA(NULL, 0, WavePeriod, 0, MODE_EMA, PRICE_TYPICAL, i);
      ArraySetAsSeries(ESA_Buf, TRUE);
   }
   for (i = limit; i > 0; i--) {
      DD_Val_Buf[i] = MathAbs((iHigh(NULL, 0, i) + iClose(NULL, 0, i) + iLow(NULL, 0, i)) / 3.0 - ESA_Buf[i]);
      ArraySetAsSeries(DD_Val_Buf, TRUE);
   }
   for (i = limit; i > 0; i--) {
      l_ima_on_arr_0 = iMAOnArray(DD_Val_Buf, 0, WavePeriod, 0, MODE_EMA, i);
      DD_Buf[i] = l_ima_on_arr_0;
      ArraySetAsSeries(DD_Buf, TRUE);
   }
   for (i = limit; i > 0; i--) {
      if (DD_Buf[i] > 0.0) CI_Buf[i] = ((iHigh(NULL, 0, i) + iClose(NULL, 0, i) + iLow(NULL, 0, i)) / 3.0 - ESA_Buf[i]) / (0.015 * DD_Buf[i]);
      else CI_Buf[i] = 0;
      ArraySetAsSeries(CI_Buf, TRUE);
   }
   for (i = limit; i > 0; i--) {
      l_ima_on_arr_0 = iMAOnArray(CI_Buf, 0, AvgPeriod, 0, MODE_EMA, i);
      BullBuf[i] = l_ima_on_arr_0;
      ArraySetAsSeries(BullBuf, TRUE);
   }
   for (i = limit; i > 0; i--) {
      l_ima_on_arr_0 = iMAOnArray(BullBuf, 0, 4, 0, MODE_SMA, i);
      BearBuf[i] = l_ima_on_arr_0;
      ArraySetAsSeries(BearBuf, TRUE);
   }
   for (i = limit; i > 0; i--) {
      if (BullBuf[i] >= BearBuf[i] && BullBuf[i + 1] <= BearBuf[i + 1] && BullBuf[i] < gi_124) {
         Buy[i] = BullBuf[i];
         //SendAlert("buy");
      } else Buy[i] = -1000;
      if (BullBuf[i] <= BearBuf[i] && BullBuf[i + 1] >= BearBuf[i + 1] && BullBuf[i] > gi_128) {
         Sell[i] = BearBuf[i];
        // SendAlert("sell");
      } else Sell[i] = -1000;
   }
   return (0);
}
